"""empty message

Revision ID: bd7891873488
Revises: 
Create Date: 2025-09-28 11:55:18.818452

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bd7891873488'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS vector;')
    op.execute('CREATE EXTENSION IF NOT EXISTS pg_trgm;')
    op.create_table('label',
    sa.Column('name', sa.String(length=16), nullable=False, comment='标签名称'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.PrimaryKeyConstraint('id'),
    comment='角色标签表'
    )
    op.create_table('user',
    sa.Column('email', sa.String(length=64), nullable=False, comment='邮箱'),
    sa.Column('nickname', sa.String(length=32), nullable=False, comment='昵称'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='密码'),
    sa.Column('avatar', sa.String(length=128), nullable=False, comment='头像'),
    sa.Column('telephone', sa.String(length=14), nullable=True, comment='手机号'),
    sa.Column('gender', sa.String(length=8), nullable=False, comment='性别'),
    sa.Column('disabled', sa.Boolean(), nullable=False, comment='是否禁用'),
    sa.Column('login_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='登录时间'),
    sa.Column('language', sa.String(length=16), nullable=False, comment='语言'),
    sa.Column('is_admin', sa.Boolean(), nullable=False, comment='是否管理员'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.PrimaryKeyConstraint('id'),
    comment='用户表'
    )
    op.create_index(op.f('ix_user_disabled'), 'user', ['disabled'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_nickname'), 'user', ['nickname'], unique=False)
    op.create_index(op.f('ix_user_telephone'), 'user', ['telephone'], unique=False)
    op.create_table('world',
    sa.Column('nickname', sa.String(length=64), nullable=False, comment='昵称'),
    sa.Column('description', sa.Text(), nullable=False, comment='描述'),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='用户ID'),
    sa.Column('data_range', sa.String(length=16), nullable=False, comment='数据范围'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='世界表'
    )
    op.create_index(op.f('ix_world_nickname'), 'world', ['nickname'], unique=False)
    op.create_index(op.f('ix_world_user_id'), 'world', ['user_id'], unique=False)
    op.create_table('character',
    sa.Column('avatar', sa.String(length=128), nullable=True, comment='头像'),
    sa.Column('nickname', sa.String(length=64), nullable=False, comment='昵称'),
    sa.Column('description', sa.Text(), nullable=False, comment='描述'),
    sa.Column('first_message', sa.Text(), nullable=False, comment='首条信息'),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='用户ID'),
    sa.Column('world_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='世界ID'),
    sa.Column('data_range', sa.String(length=16), nullable=False, comment='数据范围'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='角色表'
    )
    op.create_index(op.f('ix_character_nickname'), 'character', ['nickname'], unique=False)
    op.create_index(op.f('ix_character_user_id'), 'character', ['user_id'], unique=False)
    op.create_index(op.f('ix_character_world_id'), 'character', ['world_id'], unique=False)
    op.create_index('ix_nickname_gin', 'character', ['nickname'], unique=False, postgresql_using='gin', postgresql_ops={'nickname': 'gin_trgm_ops'})
    op.create_table('m2m_label_world',
    sa.Column('label_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('world_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.ForeignKeyConstraint(['label_id'], ['label.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='标签世界关联表'
    )
    op.create_index(op.f('ix_m2m_label_world_label_id'), 'm2m_label_world', ['label_id'], unique=False)
    op.create_index(op.f('ix_m2m_label_world_world_id'), 'm2m_label_world', ['world_id'], unique=False)
    op.create_table('conversation_session',
    sa.Column('user_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='用户ID'),
    sa.Column('world_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='世界ID'),
    sa.Column('act_character_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='用户扮演的角色ID'),
    sa.Column('title', sa.String(length=32), nullable=False, comment='会话标题'),
    sa.Column('token_usage', sa.Integer(), nullable=False, comment='对话消耗的token数'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.ForeignKeyConstraint(['act_character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='大语言模型对话会话'
    )
    op.create_index(op.f('ix_conversation_session_act_character_id'), 'conversation_session', ['act_character_id'], unique=False)
    op.create_index(op.f('ix_conversation_session_user_id'), 'conversation_session', ['user_id'], unique=False)
    op.create_index(op.f('ix_conversation_session_world_id'), 'conversation_session', ['world_id'], unique=False)
    op.create_table('document',
    sa.Column('character_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='角色ID'),
    sa.Column('world_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=True, comment='世界ID'),
    sa.Column('index', sa.String(length=64), nullable=False, comment='索引名称'),
    sa.Column('path', sa.String(length=64), nullable=False, comment='文件路径'),
    sa.Column('disabled', sa.Boolean(), nullable=False, comment='是否禁用'),
    sa.Column('data_range', sa.String(length=16), nullable=False, comment='数据范围'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='文档表'
    )
    op.create_index(op.f('ix_document_character_id'), 'document', ['character_id'], unique=False)
    op.create_index(op.f('ix_document_disabled'), 'document', ['disabled'], unique=False)
    op.create_index(op.f('ix_document_world_id'), 'document', ['world_id'], unique=False)
    op.create_table('m2m_label_character',
    sa.Column('label_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('character_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['label_id'], ['label.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='标签角色关联表'
    )
    op.create_index(op.f('ix_m2m_label_character_character_id'), 'm2m_label_character', ['character_id'], unique=False)
    op.create_index(op.f('ix_m2m_label_character_label_id'), 'm2m_label_character', ['label_id'], unique=False)
    op.create_table('m2m_world_character',
    sa.Column('world_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('character_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['world_id'], ['world.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='世界角色关联表'
    )
    op.create_index(op.f('ix_m2m_world_character_character_id'), 'm2m_world_character', ['character_id'], unique=False)
    op.create_index(op.f('ix_m2m_world_character_world_id'), 'm2m_world_character', ['world_id'], unique=False)
    op.create_table('conversation_history',
    sa.Column('session_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False, comment='会话ID'),
    sa.Column('message_id', sa.String(length=36), nullable=False, comment='消息ID'),
    sa.Column('role', sa.String(length=16), nullable=False, comment='角色'),
    sa.Column('content', sa.Text(), nullable=True, comment='对话内容'),
    sa.Column('reasoning', sa.Text(), nullable=True, comment='推理过程'),
    sa.Column('token_usage', sa.Integer(), nullable=False, comment='对话消耗的token数'),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='更新时间'),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True, comment='删除时间'),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, comment='创建时间'),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.Column('is_delete', sa.Boolean(), nullable=False, comment='是否软删除'),
    sa.ForeignKeyConstraint(['session_id'], ['conversation_session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='大语言模型对话历史'
    )
    op.create_table('m2m_session_character',
    sa.Column('session_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('character_id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.Integer(), 'sqlite'), autoincrement=True, nullable=False, comment='主键ID'),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['conversation_session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='角色会话关联表'
    )
    op.create_index(op.f('ix_m2m_session_character_character_id'), 'm2m_session_character', ['character_id'], unique=False)
    op.create_index(op.f('ix_m2m_session_character_session_id'), 'm2m_session_character', ['session_id'], unique=False)
    op.execute('INSERT INTO "user" (email, nickname, password, gender, avatar, disabled, language, is_admin, is_delete, created_at, updated_at)\n    VALUES (\'zoulee24@qq.com\', \'loreuser\', \'123456\', \'男\', \'/lorelm/resource/default_avatar.webp\', false, \'简体中文\', true, false, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    ON CONFLICT DO NOTHING;')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_m2m_session_character_session_id'), table_name='m2m_session_character')
    op.drop_index(op.f('ix_m2m_session_character_character_id'), table_name='m2m_session_character')
    op.drop_table('m2m_session_character')
    op.drop_table('conversation_history')
    op.drop_index(op.f('ix_m2m_world_character_world_id'), table_name='m2m_world_character')
    op.drop_index(op.f('ix_m2m_world_character_character_id'), table_name='m2m_world_character')
    op.drop_table('m2m_world_character')
    op.drop_index(op.f('ix_m2m_label_character_label_id'), table_name='m2m_label_character')
    op.drop_index(op.f('ix_m2m_label_character_character_id'), table_name='m2m_label_character')
    op.drop_table('m2m_label_character')
    op.drop_index(op.f('ix_document_world_id'), table_name='document')
    op.drop_index(op.f('ix_document_disabled'), table_name='document')
    op.drop_index(op.f('ix_document_character_id'), table_name='document')
    op.drop_table('document')
    op.drop_index(op.f('ix_conversation_session_world_id'), table_name='conversation_session')
    op.drop_index(op.f('ix_conversation_session_user_id'), table_name='conversation_session')
    op.drop_index(op.f('ix_conversation_session_act_character_id'), table_name='conversation_session')
    op.drop_table('conversation_session')
    op.drop_index(op.f('ix_m2m_label_world_world_id'), table_name='m2m_label_world')
    op.drop_index(op.f('ix_m2m_label_world_label_id'), table_name='m2m_label_world')
    op.drop_table('m2m_label_world')
    op.drop_index('ix_nickname_gin', table_name='character', postgresql_using='gin', postgresql_ops={'nickname': 'gin_trgm_ops'})
    op.drop_index(op.f('ix_character_world_id'), table_name='character')
    op.drop_index(op.f('ix_character_user_id'), table_name='character')
    op.drop_index(op.f('ix_character_nickname'), table_name='character')
    op.drop_table('character')
    op.drop_index(op.f('ix_world_user_id'), table_name='world')
    op.drop_index(op.f('ix_world_nickname'), table_name='world')
    op.drop_table('world')
    op.drop_index(op.f('ix_user_telephone'), table_name='user')
    op.drop_index(op.f('ix_user_nickname'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_disabled'), table_name='user')
    op.drop_table('user')
    op.drop_table('label')
    # ### end Alembic commands ###
